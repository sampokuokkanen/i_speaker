#!/usr/bin/env ruby
# frozen_string_literal: true

# Demo script to showcase AI Fix Mode capabilities

require_relative 'lib/i_speaker'

puts "üîß AI Fix Mode Demo - Expanding Presentations".cyan.bold
puts "=" * 50

puts "\nüìã Demo Overview:".yellow
puts "This demo shows how AI Fix Mode helps create comprehensive presentations"
puts "with appropriate slide counts for longer talks (30+ minutes)."
puts "\nKey features:".blue
puts "‚Ä¢ Calculate recommended slide counts based on duration"
puts "‚Ä¢ Add slides at specific positions"
puts "‚Ä¢ Expand sections with more detail"
puts "‚Ä¢ Fill gaps between slides"
puts "‚Ä¢ Generate complete slide sets"

# Create a sample talk with just a few slides
puts "\nüéØ Creating a sample 30-minute talk with only 7 slides...".yellow

talk = ISpeaker::Talk.new(
  title: "Advanced Ruby Performance Optimization",
  description: "A comprehensive guide to optimizing Ruby applications for speed and efficiency, covering profiling, memory management, and advanced techniques.",
  target_audience: "Senior Ruby developers",
  duration_minutes: 30
)

# Add initial slides (simulating what AI typically creates)
initial_slides = [
  { title: "Introduction to Ruby Performance", content: ["Why performance matters", "Common misconceptions", "Goals for today"] },
  { title: "Profiling Tools", content: ["ruby-prof", "stackprof", "memory_profiler"] },
  { title: "Memory Management", content: ["GC tuning", "Object allocation", "Memory leaks"] },
  { title: "Algorithm Optimization", content: ["Big O notation", "Data structure choices", "Benchmarking"] },
  { title: "Database Performance", content: ["N+1 queries", "Eager loading", "Query optimization"] },
  { title: "Caching Strategies", content: ["Rails caching", "Redis", "CDN integration"] },
  { title: "Conclusion", content: ["Key takeaways", "Resources", "Q&A"] }
]

initial_slides.each do |slide_data|
  slide = ISpeaker::Slide.new(
    title: slide_data[:title],
    content: slide_data[:content],
    notes: "Speaker notes for #{slide_data[:title]}"
  )
  talk.add_slide(slide)
end

puts "‚úÖ Created talk: \"#{talk.title}\"".green
puts "   Duration: #{talk.duration_minutes} minutes".light_blue
puts "   Current slides: #{talk.slides.length}".light_blue

# Show the issue
puts "\n‚ö†Ô∏è  Problem:".red
puts "   For a 30-minute talk, we only have 7 slides!"
puts "   This means ~4.3 minutes per slide - too long for audience engagement!"

# Calculate recommended slides
puts "\nüìä AI Fix Mode Analysis:".cyan
interface = ISpeaker::ConsoleInterface.new
recommended = interface.send(:calculate_recommended_slides, talk.duration_minutes)

puts "   Recommended slides: #{recommended} (1-2 minutes per slide)".green
puts "   Need to add: #{recommended - talk.slides.length} more slides".yellow

# Show how AI Fix Mode would help
puts "\nüõ†Ô∏è  AI Fix Mode Options:".blue.bold

puts "\n1. Add Slides at Specific Positions:".blue
puts "   ‚Ä¢ Add 3 slides after \"Introduction\" to expand on prerequisites"
puts "   ‚Ä¢ Add 5 slides in \"Profiling Tools\" section with demos"
puts "   ‚Ä¢ Add 4 slides showing real-world examples"

puts "\n2. Expand Specific Sections:".blue
puts "   ‚Ä¢ Expand \"Memory Management\" with GC deep-dive (+ 6 slides)"
puts "   ‚Ä¢ Expand \"Algorithm Optimization\" with case studies (+ 5 slides)"
puts "   ‚Ä¢ Add practical exercises throughout (+ 4 slides)"

puts "\n3. Fill Gaps Between Slides:".blue
puts "   ‚Ä¢ Add transition slides between major topics"
puts "   ‚Ä¢ Include recap slides after complex sections"
puts "   ‚Ä¢ Add interactive Q&A checkpoints"

puts "\n4. Generate Complete Set (#{recommended} slides):".blue
puts "   ‚Ä¢ AI analyzes current structure"
puts "   ‚Ä¢ Identifies missing topics and depth"
puts "   ‚Ä¢ Creates comprehensive presentation flow"
puts "   ‚Ä¢ Adds examples, exercises, and interactions"

# Simulate what the expanded structure might look like
puts "\nüìù Example Expanded Structure (first 20 slides):".green
expanded_structure = [
  "1. Title Slide - Advanced Ruby Performance",
  "2. About Me / Introduction",
  "3. Agenda Overview",
  "4. Why Performance Matters",
  "5. Performance Myths in Ruby",
  "6. Setting Performance Goals",
  "7. Introduction to Profiling",
  "8. ruby-prof Deep Dive",
  "9. ruby-prof Demo: CPU Profiling",
  "10. ruby-prof Demo: Memory Profiling",
  "11. stackprof Overview",
  "12. stackprof Demo: Flame Graphs",
  "13. memory_profiler Basics",
  "14. memory_profiler Demo: Finding Leaks",
  "15. Profiling Best Practices",
  "16. Quick Exercise: Profile Your Code",
  "17. Understanding Ruby's GC",
  "18. GC Tuning Parameters",
  "19. Object Allocation Patterns",
  "20. Memory Leak Detection..."
]

expanded_structure.each { |slide| puts "   #{slide}".light_blue }
puts "   ... and #{recommended - 20} more slides".light_blue

# Benefits
puts "\n‚ú® Benefits of Proper Slide Count:".green.bold
puts "‚Ä¢ Better pacing - audience stays engaged"
puts "‚Ä¢ More examples and practical demos"
puts "‚Ä¢ Interactive elements every 5-10 minutes"
puts "‚Ä¢ Deeper coverage of complex topics"
puts "‚Ä¢ Time for Q&A and discussions"
puts "‚Ä¢ Professional presentation structure"

# Show specific expansion example
puts "\nüîç Example: Expanding \"Memory Management\" Section".yellow
puts "\nOriginal (1 slide):".red
puts "   ‚Ä¢ GC tuning"
puts "   ‚Ä¢ Object allocation"
puts "   ‚Ä¢ Memory leaks"

puts "\nExpanded (7 slides):".green
memory_expansion = [
  "1. Memory Management Overview",
  "2. How Ruby's GC Works - Mark & Sweep",
  "3. GC Tuning Parameters Deep Dive",
  "4. Demo: Monitoring GC Performance",
  "5. Object Allocation Best Practices",
  "6. Case Study: Reducing Memory Usage by 50%",
  "7. Exercise: Find the Memory Leak"
]
memory_expansion.each { |slide| puts "   #{slide}".light_green }

# Usage instructions
puts "\nüí° How to Use AI Fix Mode:".cyan.bold
puts "1. Create or load your talk"
puts "2. Go to Main Menu ‚Üí AI assistance"
puts "3. Select \"AI Fix Mode - Add/Insert multiple slides\""
puts "4. Choose your expansion strategy"
puts "5. AI generates contextually appropriate slides"
puts "6. Review and adjust as needed"

puts "\nüéØ Pro Tips:".blue
puts "‚Ä¢ Start with \"Generate complete set\" for best results"
puts "‚Ä¢ Use \"Expand sections\" for deep-dives on complex topics"
puts "‚Ä¢ Use \"Fill gaps\" to improve flow and transitions"
puts "‚Ä¢ Always review AI suggestions before accepting"

puts "\nüöÄ Result:".green.bold
puts "Transform a basic 7-slide outline into a comprehensive #{recommended}-slide"
puts "presentation perfectly paced for your #{talk.duration_minutes}-minute talk!"

# Clean up
puts "\n‚úÖ Demo complete!".green.bold
puts "AI Fix Mode helps create professional, well-paced presentations.".light_blue